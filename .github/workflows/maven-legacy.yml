# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Maven Build for maintenance branch

on:
  push:
    branches: [ v1-maintenance ]
  pull_request:
    branches: [ v1-maintenance ]

jobs:
  build-bundles:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B jacoco:prepare-agent install jacoco:report jacoco:report-aggregate --file pom.xml

  build-plugins:
    runs-on: ubuntu-latest
    needs: build-bundles
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Build plugins with Tycho
        run: mvn -B  -f plugins/eclipse install

  deploy-bundles:
    runs-on: ubuntu-latest
    needs: build-bundles
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Install GPG key
        run: |
            cat <(echo -e "${{ secrets.GPG_PRIVATE_KEY }}") | gpg --batch --import
            gpg --list-secret-keys --keyid-format LONG
      - name: Initialize variables
        id: init
        run: |
            VERSION=$(mvn -B help:evaluate -Dexpression='project.version' $@ | grep -v '\[' | tail -1)
            echo "$VERSION"
      - name: Publish Snapshot to Central
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        if: contains(steps.init.output.VERSION, 'SNAPSHOT' )
        run: | 
            mvn \
              --no-transfer-progress \
              --batch-mode \
              clean install deploy \
              --settings .util/settings.xml \
              -DskipTests 
              

#-s .util/settings.xml -DskipTests  clean package javadoc:jar source:jar-no-fork gpg:sign install deploy
# -Dgpg.passphrase=${{ secrets.GPG_PASSPHRASE }}

